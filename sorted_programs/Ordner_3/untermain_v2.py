import tkinter as tk  # GUI Framework (verwendet Zeile 23, 45)
from tkinter import ttk  # moderne Widgets (verwendet Zeile 16, 28)
import subprocess  # Prozess-Start (verwendet Zeile 47, 52)
import sys  # System-Zugriff (verwendet Zeile 48, 53)
import help_system  # Hilfe-System (verwendet Zeile 37)

def create_title(root):  # Spiel-Titel (verwendet Zeile 32)
    label = tk.Label(root, text="üéØ GERADEN-SPIEL")  # Titel-Text (Gaming-Header)
    label.configure(fg="#00ff00", bg="#1e1e1e")  # gr√ºn/dunkel (Gaming-Style)
    label.configure(font=("Arial", 28, "bold"))  # gro√üe Schrift (Hervorhebung)
    label.pack(pady=50)  # Position mit Abstand (Layout)
    return label  # Label-Objekt (Referenz)

def create_mode_buttons(root):  # Modus-Buttons (verwendet Zeile 37)
    frame = tk.Frame(root, bg="#1e1e1e")  # Button-Frame (Container)
    frame.pack(pady=20)  # Frame-Position (Layout)
    
    btn1 = create_mode_button(frame, "üéØ Gerade ziehen", start_mode1)  # Modus 1 (Zeile 22)
    btn2 = create_mode_button(frame, "üîç Funktion erraten", start_mode2)  # Modus 2 (Zeile 27)
    return frame  # Frame-Objekt (Referenz)

def create_mode_button(parent, text, cmd):  # einzelner Modus-Button (verwendet Zeile 13)
    btn = tk.Button(parent, text=text, command=cmd)  # Button-Widget (GUI-Element)
    btn.configure(bg="#2d5a27", fg="white", font=("Arial", 18, "bold"))  # Gaming-Style (Design)
    btn.configure(width=20, height=2)  # Button-Gr√∂√üe (Usability)
    btn.pack(pady=10)  # Position (Layout)
    return btn  # Button-Objekt (Referenz)

def start_mode1():  # Modus 1 starten (verwendet Zeile 13)
    try:  # Fehler-Behandlung (Robustheit)
        script_path = "modus1_gerade_ziehen.py"  # Skript-Pfad (Relative)
        subprocess.Popen([sys.executable, script_path])  # Prozess starten (External)
        print("üéØ Modus 1 - Gerade ziehen gestartet")  # Status-Info (Terminal)
    except Exception as e:  # Fehler-Fall (Catch)
        print(f"Modus 1 Fehler: {e}")  # Fehler-Output (Debug)

def start_mode2():  # Modus 2 starten (verwendet Zeile 13)
    try:  # Fehler-Behandlung (Robustheit)
        script_path = "modus2_funktion_erraten.py"  # Skript-Pfad (Relative)
        subprocess.Popen([sys.executable, script_path])  # Prozess starten (External)
        print("üîç Modus 2 - Funktion erraten gestartet")  # Status-Info (Terminal)
    except Exception as e:  # Fehler-Fall (Catch)
        print(f"Modus 2 Fehler: {e}")  # Fehler-Output (Debug)

def setup_window():  # Fenster-Setup (verwendet Zeile 57)
    root = tk.Tk()  # Hauptfenster (GUI-System)
    root.title("üéÆ GERADEN-SPIEL")  # Fenster-Titel (Branding)
    root.geometry("800x600")  # Standard-Gr√∂√üe (Gaming-Format)
    root.configure(bg="#1e1e1e")  # dunkler Hintergrund (Gaming-Theme)
    return root  # Fenster-Objekt (Return)

def add_help_and_quit(root):  # Hilfe und Beenden (verwendet Zeile 62)
    help_system.add_help_to_window(root)  # Hilfe-Button (immer verf√ºgbar)
    
    quit_btn = tk.Button(root, text="üö™ Beenden")  # Beenden-Button (Exit)
    quit_btn.configure(command=root.quit, bg="#8b0000", fg="white")  # rot/wei√ü (Warnung)
    quit_btn.configure(font=("Arial", 12))  # normale Schrift (Sekund√§r)
    quit_btn.pack(side="bottom", pady=20)  # unten positioniert (Footer)

def main():  # Hauptprogramm (Entry Point)
    root = setup_window()  # Fenster erstellen (Zeile 42)
    create_title(root)  # Titel hinzuf√ºgen (Zeile 8)
    create_mode_buttons(root)  # Buttons hinzuf√ºgen (Zeile 13)
    add_help_and_quit(root)  # Hilfe und Exit (Zeile 47)
    root.mainloop()  # Event-Loop (GUI-System)

if __name__ == "__main__":  # Direktstart-Check (Standard)
    main()  # Spiel-Men√º starten (Zeile 52)